{"ast":null,"code":"var _jsxFileName = \"/Users/HarjotBhullar/Projects/Simply_Code_Examples/pure_component/src/Components/MyComponent/MyComponent.js\";\nimport React from \"react\";\nimport \"./MyComponent.css\";\nexport default class MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.increment = this.increment.bind(this);\n    this.state = {\n      count: this.props.intialCount\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"component did mount... \");\n  }\n\n  componentDidUpdate() {\n    console.log(\"component did Update... \");\n  }\n\n  componentWillUnmount() {\n    console.log(\"YO COMPONENT Unmounted... \");\n  }\n\n  getButton() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"button\",\n      onClick: this.increment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, \"Plus one\");\n  }\n\n  increment() {\n    this.setState({\n      count: this.state.count + 1\n    });\n  }\n\n  render() {\n    var count = \"Count: \" + this.state.count;\n    var button = this.getButton();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"MyComponent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"Child Component\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, count), button);\n  }\n\n}","map":{"version":3,"sources":["/Users/HarjotBhullar/Projects/Simply_Code_Examples/pure_component/src/Components/MyComponent/MyComponent.js"],"names":["React","MyComponent","Component","constructor","props","increment","bind","state","count","intialCount","componentDidMount","console","log","componentDidUpdate","componentWillUnmount","getButton","setState","render","button"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AAEA,eAAe,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACvDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWK;AADP,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;;AACDC,EAAAA,kBAAkB,GAAG;AACnBF,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD;;AACDE,EAAAA,oBAAoB,GAAG;AACrBH,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD;;AACDG,EAAAA,SAAS,GAAG;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAwB,MAAA,OAAO,EAAE,KAAKV,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD;;AACDA,EAAAA,SAAS,GAAG;AACV,SAAKW,QAAL,CAAc;AAAER,MAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA5B,KAAd;AACD;;AACDS,EAAAA,MAAM,GAAG;AACP,QAAIT,KAAK,GAAG,YAAY,KAAKD,KAAL,CAAWC,KAAnC;AACA,QAAIU,MAAM,GAAG,KAAKH,SAAL,EAAb;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBP,KAAxB,CAFF,EAGGU,MAHH,CADF;AAOD;;AAtCsD","sourcesContent":["import React from \"react\";\nimport \"./MyComponent.css\";\n\nexport default class MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.increment = this.increment.bind(this);\n    this.state = {\n      count: this.props.intialCount,\n    };\n  }\n  componentDidMount() {\n    console.log(\"component did mount... \");\n  }\n  componentDidUpdate() {\n    console.log(\"component did Update... \");\n  }\n  componentWillUnmount() {\n    console.log(\"YO COMPONENT Unmounted... \");\n  }\n  getButton() {\n    return (\n      <div className=\"button\" onClick={this.increment}>\n        Plus one\n      </div>\n    );\n  }\n  increment() {\n    this.setState({ count: this.state.count + 1 });\n  }\n  render() {\n    var count = \"Count: \" + this.state.count;\n    var button = this.getButton();\n    return (\n      <div className=\"MyComponent\">\n        <div className=\"Title\">Child Component</div>\n        <div className=\"count\">{count}</div>\n        {button}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}